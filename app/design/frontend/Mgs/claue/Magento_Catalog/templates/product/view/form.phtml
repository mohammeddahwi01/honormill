<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

/**
 * Product view template
 *
 * @var $block \Magento\Catalog\Block\Product\View
 */
?>
<?php $_helper = $this->helper('Magento\Catalog\Helper\Output');
?>
<?php $_product = $block->getProduct(); 
?>

<div class="product-add-form">
    <form data-product-sku="<?= $block->escapeHtml($_product->getSku()) ?>"
          action="<?= /* @NoEscape */ $block->getSubmitUrl($_product) ?>" method="post"
          id="product_addtocart_form"<?php if ($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?> class="product-view-validate">
        <input type="hidden" name="product" value="<?= /* @escapeNotVerified */ $_product->getId() ?>" />
        <input type="hidden" name="selected_configurable_option" value="" />
        <input type="hidden" name="related_product" id="related-products-field" value="" />
        <?= $block->getBlockHtml('formkey') ?>
        <?= $block->getChildHtml('form_top') ?>
        
        <?php if (!$block->hasOptions()):?>
            <?= $block->getChildHtml('product_info_form_content') ?>
        <?php else:?>
            <?php if ($_product->isSaleable() && $block->getOptionsContainer() == 'container1'):?>
                <?= $block->getChildChildHtml('options_container') ?>
            <?php endif;?>
        <?php endif; ?>

        <?php if ($_product->isSaleable() && $block->hasOptions() && $block->getOptionsContainer() == 'container2'):?>
            <?= $block->getChildChildHtml('options_container') ?>
        <?php endif;?>
        <?= $block->getChildHtml('form_bottom') ?>
    </form>
</div>
<script>
    require([
        'jquery',
        'priceBox'
    ], function($){
        var dataPriceBoxSelector = '[data-role=priceBox]',
            dataProductIdSelector = '[data-product-id=<?= $block->escapeHtml($_product->getId()) ?>]',
            priceBoxes = $(dataPriceBoxSelector + dataProductIdSelector);

        priceBoxes = priceBoxes.filter(function(index, elem){
            return !$(elem).find('.price-from').length;
        });

        priceBoxes.priceBox({'priceConfig': <?= /* @escapeNotVerified */ $block->getJsonConfig() ?>});

        $('body').on('input', '#filterSelection', function(e){
            $('.mageworx-swatch-option, .product-options-wrapper .field').hide();
            $('.mageworx-swatch-option').removeClass('act-swatch')
            $('.product-options-wrapper .field').addClass('hide-field');
            var txt = $(this).val();
            $('.opt-filter'+txt).closest('.field').removeClass('hide-field').show();
            $('.opt-filter'+txt).closest('.mageworx-swatch-option').show();
            $('.opt-filter'+txt).closest('.mageworx-swatch-option').addClass('act-swatch');
            if ($('.opt-filter'+txt).length > 0) {
                var isVisible = 0;
                $('.opt-filter'+txt).each(function(){
                    if ($(this).closest('.mageworx-swatch-option').is(':visible')) {
                        isVisible = 1;
                    }
                });
                if (isVisible > 0) {
                    $('.no-record-found').hide();    
                } else {
                    $('.no-record-found').show();
                }
            } else {
                $('.no-record-found').show();
            }
        });

        $('body').on('click', '.filter-val', function(){
            var elem = $(this);
            elem.toggleClass('act-filter');
            var selectedHtml = '';            
            if (elem.hasClass('act-filter')) {
                selectedHtml += '<span class="'+elem.data('val')+'">'+elem.children().text()+'<i class="fa fa-close"></i></span>';
                $('.selected-filters .clear-all').before(selectedHtml);
            } else {
                $('.'+elem.data('val')).remove();
            }
            var filterText = '';
            var actSize = [];
            var actColor = [];
            var actFabric = [];

            $('.filter-size .filter-val.act-filter').each(function(index, value){
                var dataSize = $(this).data('val');
                actSize.push(dataSize);
            });
            $('.filter-color .filter-val.act-filter').each(function(index, value){
                var dataColor = $(this).data('val');
                actColor.push(dataColor);
            });
            $('.filter-fabric .filter-val.act-filter').each(function(index, value){
                var dataFabric = $(this).data('val');
                actFabric.push(dataFabric);
            });
            /*console.log("==========actSize==========");
            console.log(actSize);
            console.log("==========actColor==========");
            console.log(actColor);
            console.log("==========actFabric==========");
            console.log(actFabric);*/
            if (actSize.length > 0 && actColor.length > 0 && actFabric.length > 0) {
                $.each( actSize, function( key, value ) {
                    var dataSizeVal = value;
                    $.each( actColor, function( ky, val ) {
                        var dataColorVal = val;
                        $.each( actFabric, function( k, v ) {
                            var dataFabricVal = v;
                            filterText += ', .opt-filter:contains("'+dataSizeVal+'"):contains("'+dataColorVal+'"):contains("'+dataFabricVal+'")';
                        });
                    });  
                });
            } else if (actSize.length > 0 && actColor.length > 0 && actFabric.length == 0) {
                $.each( actSize, function( key, value ) {
                    var dataSizeVal = value;
                    $.each( actColor, function( ky, val ) {
                        var dataColorVal = val;
                        filterText += ', .opt-filter:contains("'+dataSizeVal+'"):contains("'+dataColorVal+'")';
                    });  
                });
            } else if (actSize.length > 0 && actColor.length == 0 && actFabric.length > 0) {
                $.each( actSize, function( key, value ) {
                    var dataSizeVal = value;
                    $.each( actFabric, function( k, v ) {
                        var dataFabricVal = v;
                        filterText += ', .opt-filter:contains("'+dataSizeVal+'"):contains("'+dataFabricVal+'")';
                    });
                });
            } else if (actSize.length == 0 && actColor.length > 0 && actFabric.length > 0) {
                $.each( actColor, function( ky, val ) {
                    var dataColorVal = val;
                    $.each( actFabric, function( k, v ) {
                        var dataFabricVal = v;
                        filterText += ', .opt-filter:contains("'+dataColorVal+'"):contains("'+dataFabricVal+'")';
                    });
                });
            } else if (actSize.length > 0 && actColor.length == 0 && actFabric.length == 0) {
                $.each( actSize, function( key, value ) {
                    var dataSizeVal = value;
                    filterText += ', .opt-filter:contains("'+dataSizeVal+'")';
                });
            } else if (actSize.length == 0 && actColor.length > 0 && actFabric.length == 0) {
                $.each( actColor, function( ky, val ) {
                    var dataColorVal = val;
                        filterText += ', .opt-filter:contains("'+dataColorVal+'")';
                });  
            } else if (actSize.length == 0 && actColor.length == 0 && actFabric.length > 0) {
                $.each( actFabric, function( k, v ) {
                    var dataFabricVal = v;
                    filterText += ', .opt-filter:contains("'+dataFabricVal+'")';
                });
            }
            filterText = filterText.substring(1, filterText.length);
            filterText = $.trim(filterText);
            $('#filterSelection').val(filterText).trigger('input');
            if ($('.selected-filters span:not(.clear-all)').length <= 0) {
                $('.selected-filters span.clear-all').hide();
            } else {
                $('.selected-filters span.clear-all').show();
            }
        });

        $('body').on('click', '.selected-filters span:not(.clear-all)', function(){
            var curClass = $(this).attr('class');
            $(this).remove();
            $('[data-val="'+curClass+'"]').trigger('click'); 
        });

        $('body').on('click', '.selected-filters span.clear-all', function(){
            $('.filter-val.act-filter').trigger('click');
        });
    });
</script>